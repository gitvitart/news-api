services:
  postgres:
    container_name: postgres_container
    image: postgres:14.8-alpine3.18
    command:
      - "postgres"
      - "-c"
      - "max_connections=50"
      - "-c"
      - "shared_buffers=1GB"
      - "-c"
      - "effective_cache_size=4GB"
      - "-c"
      - "work_mem=16MB"
      - "-c"
      - "maintenance_work_mem=512MB"
      - "-c"
      - "random_page_cost=1.1"
      - "-c"
      - "temp_file_limit=10GB"
      - "-c"
      - "log_min_duration_statement=200ms"
      - "-c"
      - "idle_in_transaction_session_timeout=10s"
      - "-c"
      - "lock_timeout=1s"
      - "-c"
      - "statement_timeout=60s"
      - "-c"
      - "shared_preload_libraries=pg_stat_statements"
      - "-c"
      - "pg_stat_statements.max=10000"
      - "-c"
      - "pg_stat_statements.track=all"
    environment:
      POSTGRES_DB: "newsdb"
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "123Secret_a"
      PGDATA: "/var/lib/postgresql/data/pgdata"
    volumes:
      - ../2. Init Database:/docker-entrypoint-initdb.d
      - news-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d newsdb"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 4G
    ports:
      - "5432:5432"
    networks:
      - postgres
      - backend
  pgadmin:
    container_name: pgadmin_container
    image: dpage/pgadmin4:7.2
    environment:
      PGADMIN_DEFAULT_EMAIL: "newsuser@news.com"
      PGADMIN_DEFAULT_PASSWORD: "123Secret_a"
      PGADMIN_CONFIG_SERVER_MODE: "False"
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    ports:
      - "5050:80"
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 1G
    networks:
      - postgres

  newsapi:
    container_name: news-api
    image: ${DOCKER_REGISTRY-}newsapi
    build:
      context: .
      dockerfile: ./NewsAPI/Dockerfile
    environment:
      - DB_HOST=postgres
      - POSTGRES_DB=newsdb
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=123Secret_a
    depends_on:
      postgres:
        condition: service_healthy
        restart: true
    ports:
      - "8080:8080"
    networks:
      - backend

volumes:
  pgadmin-data:
  news-data:

networks:
  postgres:
    driver: bridge
  backend:
    driver: bridge